{"version":3,"sources":["components/HeaderBar.tsx","components/Heading.tsx","actions/CommodityCase.ts","pages/components/CommodityList/Case.tsx","pages/components/CommodityList/Cases.tsx","actions/CommodityMethod.ts","pages/components/CommodityList/PayMethod.tsx","pages/components/CommodityList/PayMethods.tsx","components/PageController.tsx","pages/CommodityList.tsx","actions/PayInfo.ts","pages/components/PayInfo/CustomerForm.tsx","pages/components/PayInfo/CommodityItem.tsx","pages/PayInfo.tsx","assets/svg/CheckOrder/photo_order done.svg","router/Router.ts","pages/CheckOrder.tsx","store/reducers/CommodityCaseReducer.ts","store/reducers/CommodityMethodReducer.ts","store/reducers/PayInfoReducer.ts","store/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HeaderBar","className","Heading","title","SET_COMMODITY_CASE","RESET_COMMODITY_CASE","ResetCommodityCase","type","Case","icon","isSelected","onClickHandler","onClick","commodityCases","Cases","commodityCase","useSelector","state","commodityCaseReducer","dispatch","useDispatch","handleSelectCommodityCase","n","payload","SetCommodityCase","map","item","index","SET_COMMODITY_METHOD","RESET_COMMODITY_METHOD","ResetCommodityMethod","PayMethod","text","payMethods","logo","PayMethods","commodityMethod","commodityMethodReducer","handleSelectCommodityMethod","SetCommodityMethod","payMethod","PageController","prevClickHandler","nextClickHandler","location","useLocation","pathname","CommodityList","history","useHistory","store","push","Swal","fire","confirmButtonText","SET_PAY_INFO","RESET_PAY_INFO","ResetPayInfo","CustomerForm","payInfoPayload","payInfoReducer","inputValueChangeHandler","event","target","name","value","key","cardNumber","goodthru","cvc","SetPayInfo","htmlFor","placeholder","onChange","preventDefault","CommodityItem","useState","commodityLogo","setCommodityLogo","commodity","setCommodity","useEffect","getCommodityType","_commodityLogo","_commodity","PayInfo","payInfo","goBack","length","routes","path","component","exact","src","orderDownPhoto","alt","replace","reducer","action","rootReducer","combineReducers","createStore","App","route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.887672f6.chunk.js","sourcesContent":["const HeaderBar = () => {\n  return (\n    <div className=\"headerbar\">\n      <div className=\"process-item\">\n        <div className=\"process-item-icon\">1</div>\n        <div className=\"process-item-text process-item-text-current\">\n          商品訂單\n        </div>\n      </div>\n      <div className=\"process-item\">\n        <div className=\"process-item-icon\">2</div>\n        <div className=\"process-item-text\">付費資訊</div>\n      </div>\n      <div className=\"process-item\">\n        <div className=\"process-item-icon\">3</div>\n        <div className=\"process-item-text\">確認訂單</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderBar;\n","const Heading: React.FC<{ title: string }> = ({ title }) => {\n  return <h2 className=\"heading\">{title}</h2>;\n};\n\nexport default Heading;\n","export const SET_COMMODITY_CASE = 'SET_COMMODITY_CASE';\nexport const RESET_COMMODITY_CASE = 'RESET_COMMODITY_CASE';\n\ninterface SetCommodityCaseInterface {\n  type: typeof SET_COMMODITY_CASE;\n  payload: {\n    n: number;\n  };\n}\n\ninterface ResetCommodityCaseInterface {\n  type: typeof RESET_COMMODITY_CASE;\n}\n\nexport const SetCommodityCase = (n: number): SetCommodityCaseInterface => ({\n  type: SET_COMMODITY_CASE,\n  payload: {\n    n\n  }\n});\n\nexport const ResetCommodityCase = (): ResetCommodityCaseInterface => ({\n  type: RESET_COMMODITY_CASE\n});\n\nexport type commodityCaseActionType =\n  | SetCommodityCaseInterface\n  | ResetCommodityCaseInterface;\n","const Case: React.FC<{\n  icon: string;\n  isSelected: boolean;\n  onClickHandler: Function;\n}> = ({ icon, isSelected, onClickHandler }) => {\n  return (\n    <div\n      className={`commodity-list-cases-item ${isSelected ? 'clci-chosen' : ''}`}\n      onClick={() => onClickHandler()}\n    >\n      <div\n        className={`clci-svg clci-svg-${icon} ${\n          isSelected ? 'clci-svg-chosen' : ''\n        }`}\n      />\n    </div>\n  );\n};\n\nexport default Case;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { storeType } from '../../../store';\nimport { SetCommodityCase } from '../../../actions/CommodityCase';\n\nimport Case from './Case';\nconst commodityCases = ['3-hour', '24-hour', '30-days', '90-days'];\n\nconst Cases = () => {\n  const commodityCase = useSelector(\n    (state: storeType) => state.commodityCaseReducer\n  );\n  const dispatch = useDispatch();\n\n  const handleSelectCommodityCase = (n: number): void => {\n    dispatch(SetCommodityCase(n));\n  };\n\n  return (\n    <div className=\"commodity-list-cases-wrapper\">\n      {commodityCases.map((item: string, index: number) => {\n        return (\n          <Case\n            key={index}\n            icon={item}\n            isSelected={commodityCase === index + 1}\n            onClickHandler={() => handleSelectCommodityCase(index + 1)}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cases;\n","export const SET_COMMODITY_METHOD = 'SET_COMMODITY_METHOD';\nexport const RESET_COMMODITY_METHOD = 'RESET_COMMODITY_METHOD';\ninterface SetCommodityMethodInterface {\n  type: typeof SET_COMMODITY_METHOD;\n  payload: {\n    n: number;\n  };\n}\n\ninterface ResetCommodityMethodInterface {\n  type: typeof RESET_COMMODITY_METHOD;\n}\n\nexport const SetCommodityMethod = (n: number): SetCommodityMethodInterface => ({\n  type: SET_COMMODITY_METHOD,\n  payload: {\n    n\n  }\n});\n\nexport const ResetCommodityMethod = (): ResetCommodityMethodInterface => ({\n  type: RESET_COMMODITY_METHOD\n});\n\nexport type commodityMethodActionType =\n  | SetCommodityMethodInterface\n  | ResetCommodityMethodInterface;\n","type props = {\n  icon: string;\n  text: string | null;\n  isSelected: boolean;\n  onClickHandler: Function;\n};\n\nconst PayMethod: React.FC<props> = ({\n  icon,\n  text,\n  isSelected,\n  onClickHandler\n}) => {\n  return (\n    <div\n      className={`commodity-list-methods-item ${\n        isSelected ? 'clmi-chosen' : ''\n      }`}\n      onClick={() => onClickHandler()}\n    >\n      <div\n        className={`clmi-logo clmi-logo-${icon} ${\n          isSelected ? 'clmi-logo-chosen' : ''\n        }`}\n      />\n      {text && (\n        <div className={`clmi-text ${isSelected ? 'clmi-text-chosen' : ''}`}>\n          {text}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PayMethod;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { storeType } from '../../../store';\nimport { SetCommodityMethod } from '../../../actions/CommodityMethod';\n\nimport PayMethod from './PayMethod';\n\nconst payMethods = [\n  {\n    logo: 'creditcard',\n    text: '信用卡'\n  },\n  {\n    logo: 'atm',\n    text: '銀行轉帳'\n  },\n  {\n    logo: 'paypal',\n    text: null\n  },\n  {\n    logo: 'barcode',\n    text: '超商繳費'\n  }\n];\nconst PayMethods = () => {\n  const commodityMethod = useSelector(\n    (state: storeType) => state.commodityMethodReducer\n  );\n  const dispatch = useDispatch();\n\n  const handleSelectCommodityMethod = (n: number): void => {\n    dispatch(SetCommodityMethod(n));\n  };\n\n  return (\n    <div className=\"commodity-list-methods-wrapper\">\n      {payMethods.map(\n        (payMethod: { logo: string; text: string | null }, index: number) => {\n          return (\n            <PayMethod\n              key={index + 1}\n              icon={payMethod.logo}\n              text={payMethod.text}\n              isSelected={commodityMethod === index + 1}\n              onClickHandler={() => handleSelectCommodityMethod(index + 1)}\n            />\n          );\n        }\n      )}\n    </div>\n  );\n};\n\nexport default PayMethods;\n","import { useLocation } from 'react-router-dom';\n\ntype props = {\n  prevClickHandler: Function;\n  nextClickHandler: Function;\n};\n\nconst PageController: React.FC<props> = ({\n  prevClickHandler,\n  nextClickHandler\n}) => {\n  const location = useLocation();\n\n  return (\n    <div className=\"page-controller\">\n      <button\n        className=\"page-controller-button\"\n        onClick={() => prevClickHandler()}\n      >\n        返回\n      </button>\n      <button\n        className=\"page-controller-button\"\n        onClick={() => nextClickHandler()}\n      >\n        {location.pathname === '/' ? '繼續' : '付款'}\n      </button>\n    </div>\n  );\n};\n\nexport default PageController;\n","import HeaderBar from '../components/HeaderBar';\nimport Heading from '../components/Heading';\nimport Cases from './components/CommodityList/Cases';\nimport PayMethods from './components/CommodityList/PayMethods';\nimport PageController from '../components/PageController';\nimport { useHistory } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { storeType } from '../store';\nimport { useSelector } from 'react-redux';\n\nconst CommodityList = () => {\n  const history = useHistory();\n  const commodityCase = useSelector(\n    (store: storeType) => store.commodityCaseReducer\n  );\n  const commodityMethod = useSelector(\n    (store: storeType) => store.commodityMethodReducer\n  );\n\n  const nextClickHandler = () => {\n    if (!commodityCase || !commodityMethod) {\n      // user not choose case or method yet\n      Swal.fire({\n        title: 'Error!',\n        text: '請選擇方案以及付款方式',\n        icon: 'error',\n        confirmButtonText: 'Close'\n      });\n    } else {\n      history.push({ pathname: 'payInfo' });\n    }\n  };\n\n  return (\n    <>\n      <HeaderBar />\n      <div className=\"commodity-list-container\">\n        <div className=\"commodity-list-cases\">\n          <Heading title={'期間卷方案'} />\n          <Cases />\n        </div>\n        <div className=\"commodity-list-pay-methods\">\n          <Heading title={'付款方式'} />\n          <PayMethods />\n        </div>\n      </div>\n      <PageController\n        prevClickHandler={() => {}}\n        nextClickHandler={() => nextClickHandler()}\n      />\n    </>\n  );\n};\n\nexport default CommodityList;\n","export const SET_PAY_INFO = 'SET_PAY_INFO';\nexport const RESET_PAY_INFO = 'RESET_PAY_INFO';\n\nexport type PayInfoPayloadType = {\n  cardNumber: string;\n  goodthru: string;\n  cvc: string;\n  name: string;\n};\n\ninterface SetPayInfoInterface {\n  type: typeof SET_PAY_INFO;\n  payload: PayInfoPayloadType;\n}\n\ninterface ResetPayInfoInterface {\n  type: typeof RESET_PAY_INFO;\n}\n\nexport const SetPayInfo = (\n  payload: PayInfoPayloadType\n): SetPayInfoInterface => ({\n  type: SET_PAY_INFO,\n  payload\n});\n\nexport const ResetPayInfo = (): ResetPayInfoInterface => ({\n  type: RESET_PAY_INFO\n});\n\nexport type payInfoActionType = SetPayInfoInterface | ResetPayInfoInterface;\n","import Heading from '../../../components/Heading';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SetPayInfo, PayInfoPayloadType } from '../../../actions/PayInfo';\nimport { storeType } from '../../../store';\nimport { ChangeEvent } from 'react';\n\nconst CustomerForm = () => {\n  const payInfoPayload = useSelector(\n    (store: storeType) => store.payInfoReducer\n  );\n  const dispatch = useDispatch();\n  const inputValueChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    const [key, value] = [event.target.name, event.target.value];\n    let payload: PayInfoPayloadType = {\n      ...payInfoPayload\n    };\n    switch (key) {\n      case 'cardNumber':\n        payload.cardNumber = value;\n        break;\n      case 'goodthru':\n        payload.goodthru = value;\n        break;\n      case 'cvc':\n        payload.cvc = value;\n        break;\n      case 'name':\n        payload.name = value;\n        break;\n      default:\n        break;\n    }\n    dispatch(SetPayInfo(payload));\n  };\n\n  return (\n    <form className=\"payinfo-customer-form\">\n      <Heading title={'信用卡資訊'} />\n      <section className=\"payinfo-customer-form-row\">\n        <label htmlFor=\"cardNumber\">\n          信用卡號 :\n          <strong>\n            <abbr title=\"required\">*</abbr>\n          </strong>\n        </label>\n        <div className=\"input-wrapper\">\n          <input\n            name=\"cardNumber\"\n            type=\"text\"\n            placeholder=\"0000-0000-0000-0000\"\n            value={payInfoPayload.cardNumber}\n            onChange={(event) => inputValueChangeHandler(event)}\n          />\n        </div>\n      </section>\n      <section className=\"payinfo-customer-form-row\">\n        <section className=\"payinfo-customer-form-col\">\n          <label htmlFor=\"goodthru\">\n            有效年 / 月 :\n            <strong>\n              <abbr title=\"required\">*</abbr>\n            </strong>\n          </label>\n          <div className=\"input-wrapper\">\n            <input\n              name=\"goodthru\"\n              type=\"text\"\n              placeholder=\"MM/YY\"\n              value={payInfoPayload.goodthru}\n              onChange={(event) => inputValueChangeHandler(event)}\n            />\n          </div>\n        </section>\n        <section className=\"payinfo-customer-form-col\">\n          <label htmlFor=\"cvc\">\n            CVC :\n            <strong>\n              <abbr title=\"required\">*</abbr>\n            </strong>\n          </label>\n          <div className=\"input-wrapper\">\n            <input\n              name=\"cvc\"\n              type=\"text\"\n              placeholder=\"000\"\n              value={payInfoPayload.cvc}\n              onChange={(event) => inputValueChangeHandler(event)}\n            />\n          </div>\n        </section>\n      </section>\n      <section className=\"payinfo-customer-form-row\">\n        <label htmlFor=\"name\">\n          持卡人姓名 :\n          <strong>\n            <abbr title=\"required\">*</abbr>\n          </strong>\n        </label>\n        <div className=\"input-wrapper\">\n          <input\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"As shown on the card\"\n            value={payInfoPayload.name}\n            onChange={(event) => inputValueChangeHandler(event)}\n          />\n        </div>\n      </section>\n      <section className=\"payinfo-customer-form-row\">\n        <section className=\"payinfo-customer-form-col\">\n          <label htmlFor=\"credit-card\">\n            輸入交易密碼 :\n            <strong>\n              <abbr title=\"required\">*</abbr>\n            </strong>\n          </label>\n          <div className=\"input-wrapper\">\n            <input type=\"text\" />\n          </div>\n        </section>\n        <section className=\"payinfo-customer-form-col\">\n          <button\n            className=\"payinfo-customer-form-button\"\n            onClick={(event) => {\n              event.preventDefault();\n            }}\n          >\n            取得簡訊傳送交易密碼\n          </button>\n        </section>\n      </section>\n      <section className=\"payinfo-customer-form-row\">\n        <p className=\"payinfo-customer-form-reminder\">\n          *請點選「取得簡訊傳送交易密碼」按鍵，您的手機將於1~2分鐘內收到\n          動態交易認證密碼。若無法完成交易或未收到認證碼，請致電客服中心\n          電話：0800-1234-5679\n        </p>\n      </section>\n    </form>\n  );\n};\n\nexport default CustomerForm;\n","import { useSelector } from 'react-redux';\nimport { storeType } from '../../../store';\nimport { useEffect, useState } from 'react';\n\nconst getCommodityType = (\n  commodityCase: number\n): [string | null, string | null] => {\n  switch (commodityCase) {\n    case 1:\n      return ['3-hour', '3小時'];\n    case 2:\n      return ['24-hour', '24小時'];\n    case 3:\n      return ['30-days', '30日'];\n    case 4:\n      return ['90-days', '90日'];\n    default:\n      return [null, null];\n  }\n};\n\nconst CommodityItem = () => {\n  const commodityCase = useSelector(\n    (store: storeType) => store.commodityCaseReducer\n  );\n  const [commodityLogo, setCommodityLogo] = useState<string | null>(null);\n  const [commodity, setCommodity] = useState<string | null>(null);\n\n  useEffect(() => {\n    const [_commodityLogo, _commodity] = getCommodityType(commodityCase);\n    setCommodityLogo(_commodityLogo);\n    setCommodity(_commodity);\n  }, []);\n\n  return (\n    <div className=\"payinfo-commodity-item\">\n      <div className=\"commodity-item-photo-wrapper\">\n        <div\n          className={\n            commodityLogo\n              ? `commodity-item-photo commodity-item-photo-${commodityLogo}`\n              : 'commodity-item-photo'\n          }\n        />\n      </div>\n      <div className=\"commodity-item-info\">\n        <h3>Karaoke期間券</h3>\n        <ul>\n          <li>從購買日起可無限歡唱 {commodity}。</li>\n          <li>有效期總計不能超過365天。</li>\n          <li>此期間券僅適用本公司產品。</li>\n          <li>到期前追加購買，將自動延長期限。</li>\n          <li>您無法取消或退還購買的期間券。</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default CommodityItem;\n","import HeaderBar from '../components/HeaderBar';\nimport CustomerForm from './components/PayInfo/CustomerForm';\nimport CommodityItem from './components/PayInfo/CommodityItem';\nimport PageController from '../components/PageController';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { ResetPayInfo } from '../actions/PayInfo';\nimport { ResetCommodityCase } from '../actions/CommodityCase';\nimport { ResetCommodityMethod } from '../actions/CommodityMethod';\nimport { useSelector } from 'react-redux';\nimport { storeType } from '../store';\nimport Swal from 'sweetalert2';\n\nconst PayInfo = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const payInfo = useSelector((store: storeType) => store.payInfoReducer);\n\n  const prevClickHandler = () => {\n    dispatch(ResetPayInfo());\n    dispatch(ResetCommodityCase());\n    dispatch(ResetCommodityMethod());\n    history.goBack();\n  };\n\n  const nextClickHandler = () => {\n    if (\n      !payInfo.name.length ||\n      !payInfo.goodthru.length ||\n      !payInfo.cvc.length ||\n      !payInfo.cardNumber.length\n    ) {\n      Swal.fire({\n        title: 'Error!',\n        text: '請填入必填項目',\n        icon: 'error',\n        confirmButtonText: 'Close'\n      });\n    } else {\n      history.push({ pathname: 'checkOrder' });\n    }\n  };\n\n  return (\n    <>\n      <HeaderBar />\n      <div className=\"payinfo-wrapper\">\n        <CustomerForm />\n        <CommodityItem />\n      </div>\n      <PageController\n        prevClickHandler={() => prevClickHandler()}\n        nextClickHandler={() => nextClickHandler()}\n      />\n    </>\n  );\n};\n\nexport default PayInfo;\n","export default __webpack_public_path__ + \"static/media/photo_order done.f5a959a1.svg\";","import CommodityList from '../pages/CommodityList';\nimport PayInfo from '../pages/PayInfo';\nimport CheckOrder from '../pages/CheckOrder';\n\nconst routes = [\n  {\n    path: '/',\n    component: CommodityList,\n    exact: true\n  },\n  {\n    path: '/payInfo',\n    component: PayInfo,\n    exact: true\n  },\n  {\n    path: '/CheckOrder',\n    component: CheckOrder,\n    exact: true\n  }\n];\n\nexport default routes;\n","import HeaderBar from '../components/HeaderBar';\nimport orderDownPhoto from '../assets/svg/CheckOrder/photo_order done.svg';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { ResetCommodityCase } from '../actions/CommodityCase';\nimport { ResetCommodityMethod } from '../actions/CommodityMethod';\nimport { ResetPayInfo } from '../actions/PayInfo';\n\nconst CheckOrder = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const finishClickHandler = () => {\n    dispatch(ResetCommodityCase());\n    dispatch(ResetCommodityMethod());\n    dispatch(ResetPayInfo());\n    history.replace({ pathname: '/' });\n  };\n\n  return (\n    <>\n      <HeaderBar />\n      <div className=\"check-order-wrapper\">\n        <img src={orderDownPhoto} alt=\"order down\" />\n        <p>訂單已完成 !</p>\n        <button onClick={() => finishClickHandler()}>結束</button>\n      </div>\n    </>\n  );\n};\n\nexport default CheckOrder;\n","import {\n  commodityCaseActionType,\n  RESET_COMMODITY_CASE,\n  SET_COMMODITY_CASE\n} from '../../actions/CommodityCase';\n\nconst reducer = (\n  state: number = 0,\n  action: commodityCaseActionType\n): number => {\n  switch (action.type) {\n    case SET_COMMODITY_CASE:\n      return action.payload.n;\n    case RESET_COMMODITY_CASE:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  commodityMethodActionType,\n  RESET_COMMODITY_METHOD,\n  SET_COMMODITY_METHOD\n} from '../../actions/CommodityMethod';\n\nconst reducer = (\n  state: number = 0,\n  action: commodityMethodActionType\n): number => {\n  switch (action.type) {\n    case SET_COMMODITY_METHOD:\n      return action.payload.n;\n    case RESET_COMMODITY_METHOD:\n      return 0;\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  SET_PAY_INFO,\n  RESET_PAY_INFO,\n  payInfoActionType,\n  PayInfoPayloadType\n} from '../../actions/PayInfo';\n\nconst reducer = (\n  state: PayInfoPayloadType = {\n    cardNumber: '',\n    goodthru: '',\n    cvc: '',\n    name: ''\n  },\n  action: payInfoActionType\n): PayInfoPayloadType => {\n  switch (action.type) {\n    case SET_PAY_INFO:\n      return action.payload;\n    case RESET_PAY_INFO:\n      return {\n        cardNumber: '',\n        goodthru: '',\n        cvc: '',\n        name: ''\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, combineReducers } from 'redux';\nimport commodityCaseReducer from './reducers/CommodityCaseReducer';\nimport commodityMethodReducer from './reducers/CommodityMethodReducer';\nimport payInfoReducer from './reducers/PayInfoReducer';\n\nconst rootReducer = combineReducers({\n  commodityCaseReducer,\n  commodityMethodReducer,\n  payInfoReducer\n});\n\nconst store = createStore(rootReducer);\n\nexport type storeType = ReturnType<typeof rootReducer>;\nexport default store;\n","import routes from './router/Router';\nimport './App.scss';\nimport './App-desktop.scss';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/index';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Provider store={store}>\n        <div className=\"App\">\n          <Switch>\n            {routes.map((route, index) => {\n              return (\n                <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  component={route.component}\n                />\n              );\n            })}\n          </Switch>\n        </div>\n      </Provider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}